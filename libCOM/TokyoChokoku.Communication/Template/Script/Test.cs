// ProjectDir = /Volumes/unicast_disk/TokyoChokoku/Projects/communication/TokyoChokoku.Communication
// (Write)    = /Volumes/unicast_disk/TokyoChokoku/Projects/communication/TokyoChokoku.Communication/Template/Script/WriteCommand.json
// (Read )    = /Volumes/unicast_disk/TokyoChokoku/Projects/communication/TokyoChokoku.Communication/Template/Script/ReadCommand.json
// 
// This code is generated by Test.tt
// 
    // Tango Chan
namespace TokyoChokoku.Communication
{

using System;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using TokyoChokoku.Communication;
using TokyoChokoku.Text;
using TokyoChokoku.Structure;
using TokyoChokoku.Structure.Binary.FileFormat;
using TokyoChokoku.MarkinBox.Sketchbook;

public partial class CommandExecutor
{
    // public async Task<Response> ReadCommandSurvival(WritingCommandBuilder builder)
    // public async Task<Response> ReadRevision()
    // public async Task<Response> ReadVersion()
    // public async Task<ResponseShort> ReadAlert()
    // public async Task<ResponseShort> ReadMarkingStatus()
    // public async Task<ResponseShort> ReadMarkingPausingStatus()
    // public async Task<ResponseShort> ReadMarkingResult()
    // public async Task<ResponseShort> ReadExclusion()
    // public async Task<ResponseShort> ReadNumOfFieldInCurrentFile()
    // public async Task<ResponseMBData> ReadFieldOfCurrentFile(int indexOfField)
    // public async Task<ResponseShort> ReadPermanentMarkingFileNo()
    // public async Task<ResponseShort> ReadFlagFileLoadedFromSdCard()
    // public async Task<ResponseShort> ReadRemoteFileMap(int fileIndex)
    // public async Task<ResponseShorts> ReadRemoteFileMaps()
    // public async Task<ResponseRemoteFileNames> ReadRemoteFileNames()
    // public async Task<ResponseShort> ReadMachineModelNo()
    // public async Task<ResponseShort> ReadMarkingHeadPinIsAtOrigin()
    // public async Task<ResponseShort> ReadBSDEnabled()
    // public async Task<ResponseAscii> ReadCalendarDayReplacements()
    // public async Task<ResponseAscii> ReadCalendarMonthReplacements()
    // public async Task<ResponseAscii> ReadCalendarYearReplacements()
    // public async Task<ResponseMBCalendarShiftData> ReadCalendarShiftReplacements()
    // public async Task<ResponseMBSerialSettingData> ReadSerialSettings()
    // public async Task<ResponseMBSerialCounterData> ReadSerialCounters()
}
