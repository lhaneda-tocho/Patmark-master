<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ output extension=".designer.cs" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="TokyoChokoku.MarkinBox.Sketchbook.TemplateMeta" #>
<#@ include file="$(SolutionDir)/Global.ttinclude"#>
<#  #>
// 
// This code is generated by "MutableParameterTemplate.tt"
// Not allowed to modify this code because your changes are deleted when in regeration.
// 

namespace TokyoChokoku.MarkinBox.Sketchbook.Properties.Stores {
    using TokyoChokoku.MarkinBox.Sketchbook.Properties;
    using TokyoChokoku.MarkinBox.Sketchbook.Validators;
    using TokyoChokoku.MarkinBox.Sketchbook.Connections;
    using System.Linq;
    using System.Collections.Generic;

<#
foreach (var definition in MetaSerialStores.SettingDefinitions){
    var name = definition.Name;
    var typeName = definition.Type;
#>
    public class SerialSettings<#= name #>Connection : Connection<<#= typeName #>>
    {
        public SerialSettings<#= name #>Connection(
            SerialStores stores,
            ModificationListener errorListener,
            ModificationListener modifiedListener
        ) : base (
            stores.<#= name #>Store,
            <#= typeName #>.TryParse,
            errorListener,
            modifiedListener
        )
        {
        }
    }
<#
}
#>

<#
foreach (var definition in MetaSerialStores.CounterDefinitions){
    var name = definition.Name;
    var typeName = definition.Type;
#>
    public class SerialSettingsCounter<#= name #>Connection : Connection<<#= typeName #>>
    {
        public SerialSettingsCounter<#= name #>Connection(
            SerialStores stores,
            ModificationListener errorListener,
            ModificationListener modifiedListener
        ) : base (
            stores.Counter<#= name #>Store,
            <#= typeName #>.TryParse,
            errorListener,
            modifiedListener
        )
        {
        }
    }
<#
}
#>

}
