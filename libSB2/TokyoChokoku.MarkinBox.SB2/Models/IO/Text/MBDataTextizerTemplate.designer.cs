﻿// 
// This code is generated by "EditorTemplate.tt"
// Not allowed to modify this code because your changes are deleted when in regeration.
// 


namespace TokyoChokoku.MarkinBox.Sketchbook
{
    using System;
    using System.Collections.Generic;
    using Smdn.Formats.Ini;

	using TokyoChokoku.MarkinBox.Sketchbook.Parameters;

	
	public sealed partial class MBDataTextizer
	{
		public static void ReadEachStructure (IniSection section, MBDataStructure raw) {         
			var fieldType = (FieldType)raw.Type;         
			switch ( fieldType ) {
			case FieldType.HorizontalText:
				ReadHorizontalText (section, raw);
                return;

			case FieldType.YVerticalText:
				ReadYVerticalText (section, raw);
                return;

			case FieldType.XVerticalText:
				ReadXVerticalText (section, raw);
                return;

			case FieldType.InnerArcText:
				ReadInnerArcText (section, raw);
                return;

			case FieldType.OuterArcText:
				ReadOuterArcText (section, raw);
                return;

			case FieldType.QrCode:
				ReadQrCode (section, raw);
                return;

			case FieldType.DataMatrix:
				ReadDataMatrix (section, raw);
                return;

			case FieldType.Rectangle:
				ReadRectangle (section, raw);
                return;

			case FieldType.Triangle:
				ReadTriangle (section, raw);
                return;

			case FieldType.Circle:
				ReadCircle (section, raw);
                return;

			case FieldType.Line:
				ReadLine (section, raw);
                return;

			case FieldType.Bypass:
				ReadBypass (section, raw);
                return;

			case FieldType.Ellipse:
				ReadEllipse (section, raw);
                return;

			default:
				return;
			}
		}

        public static void WriteEachStructure (MBData raw, IniSection section) {     
            var fieldType = (FieldType)raw.Type;
            switch ( fieldType ) {
            case FieldType.HorizontalText:
                WriteHorizontalText (raw, section);
                return;

            case FieldType.YVerticalText:
                WriteYVerticalText (raw, section);
                return;

            case FieldType.XVerticalText:
                WriteXVerticalText (raw, section);
                return;

            case FieldType.InnerArcText:
                WriteInnerArcText (raw, section);
                return;

            case FieldType.OuterArcText:
                WriteOuterArcText (raw, section);
                return;

            case FieldType.QrCode:
                WriteQrCode (raw, section);
                return;

            case FieldType.DataMatrix:
                WriteDataMatrix (raw, section);
                return;

            case FieldType.Rectangle:
                WriteRectangle (raw, section);
                return;

            case FieldType.Triangle:
                WriteTriangle (raw, section);
                return;

            case FieldType.Circle:
                WriteCircle (raw, section);
                return;

            case FieldType.Line:
                WriteLine (raw, section);
                return;

            case FieldType.Bypass:
                WriteBypass (raw, section);
                return;

            case FieldType.Ellipse:
                WriteEllipse (raw, section);
                return;

            default:
                return;
            }
        }


        static partial void ReadHorizontalText (IniSection section, MBDataStructure raw);
        static partial void ReadYVerticalText (IniSection section, MBDataStructure raw);
        static partial void ReadXVerticalText (IniSection section, MBDataStructure raw);
        static partial void ReadInnerArcText (IniSection section, MBDataStructure raw);
        static partial void ReadOuterArcText (IniSection section, MBDataStructure raw);
        static partial void ReadQrCode (IniSection section, MBDataStructure raw);
        static partial void ReadDataMatrix (IniSection section, MBDataStructure raw);
        static partial void ReadRectangle (IniSection section, MBDataStructure raw);
        static partial void ReadTriangle (IniSection section, MBDataStructure raw);
        static partial void ReadCircle (IniSection section, MBDataStructure raw);
        static partial void ReadLine (IniSection section, MBDataStructure raw);
        static partial void ReadBypass (IniSection section, MBDataStructure raw);
        static partial void ReadEllipse (IniSection section, MBDataStructure raw);


        static partial void WriteHorizontalText (MBData raw, IniSection section);
        static partial void WriteYVerticalText (MBData raw, IniSection section);
        static partial void WriteXVerticalText (MBData raw, IniSection section);
        static partial void WriteInnerArcText (MBData raw, IniSection section);
        static partial void WriteOuterArcText (MBData raw, IniSection section);
        static partial void WriteQrCode (MBData raw, IniSection section);
        static partial void WriteDataMatrix (MBData raw, IniSection section);
        static partial void WriteRectangle (MBData raw, IniSection section);
        static partial void WriteTriangle (MBData raw, IniSection section);
        static partial void WriteCircle (MBData raw, IniSection section);
        static partial void WriteLine (MBData raw, IniSection section);
        static partial void WriteBypass (MBData raw, IniSection section);
        static partial void WriteEllipse (MBData raw, IniSection section);

	}
}