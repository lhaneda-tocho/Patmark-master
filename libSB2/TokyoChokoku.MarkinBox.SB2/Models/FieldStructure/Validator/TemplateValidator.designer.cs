﻿// 
// This code is generated by template.
// Not allowed to modify this code because your changes are deleted when in regeration.
// 

namespace TokyoChokoku.MarkinBox.Sketchbook.Validators {
    using System;
    using TokyoChokoku.MarkinBox.Sketchbook.Parameters;


	public static partial class HorizontalTextValidator {

        public static ClosedValidator CreateClosed (MutableHorizontalTextParameter param) {
            return new OfClosed (param);
        }


        private sealed class OfClosed : ClosedValidator {
            private readonly MutableHorizontalTextParameter p;

            public OfClosed (MutableHorizontalTextParameter param) {
                this.p = param;
            }

            public ValidationResult Validate () {
                return HorizontalTextValidator.Validate (p);
            }
        }
	}





	public static partial class YVerticalTextValidator {

        public static ClosedValidator CreateClosed (MutableYVerticalTextParameter param) {
            return new OfClosed (param);
        }


        private sealed class OfClosed : ClosedValidator {
            private readonly MutableYVerticalTextParameter p;

            public OfClosed (MutableYVerticalTextParameter param) {
                this.p = param;
            }

            public ValidationResult Validate () {
                return YVerticalTextValidator.Validate (p);
            }
        }
	}





	public static partial class XVerticalTextValidator {

        public static ClosedValidator CreateClosed (MutableXVerticalTextParameter param) {
            return new OfClosed (param);
        }


        private sealed class OfClosed : ClosedValidator {
            private readonly MutableXVerticalTextParameter p;

            public OfClosed (MutableXVerticalTextParameter param) {
                this.p = param;
            }

            public ValidationResult Validate () {
                return XVerticalTextValidator.Validate (p);
            }
        }
	}





	public static partial class InnerArcTextValidator {

        public static ClosedValidator CreateClosed (MutableInnerArcTextParameter param) {
            return new OfClosed (param);
        }


        private sealed class OfClosed : ClosedValidator {
            private readonly MutableInnerArcTextParameter p;

            public OfClosed (MutableInnerArcTextParameter param) {
                this.p = param;
            }

            public ValidationResult Validate () {
                return InnerArcTextValidator.Validate (p);
            }
        }
	}





	public static partial class OuterArcTextValidator {

        public static ClosedValidator CreateClosed (MutableOuterArcTextParameter param) {
            return new OfClosed (param);
        }


        private sealed class OfClosed : ClosedValidator {
            private readonly MutableOuterArcTextParameter p;

            public OfClosed (MutableOuterArcTextParameter param) {
                this.p = param;
            }

            public ValidationResult Validate () {
                return OuterArcTextValidator.Validate (p);
            }
        }
	}





	public static partial class QrCodeValidator {

        public static ClosedValidator CreateClosed (MutableQrCodeParameter param) {
            return new OfClosed (param);
        }


        private sealed class OfClosed : ClosedValidator {
            private readonly MutableQrCodeParameter p;

            public OfClosed (MutableQrCodeParameter param) {
                this.p = param;
            }

            public ValidationResult Validate () {
                return QrCodeValidator.Validate (p);
            }
        }
	}





	public static partial class DataMatrixValidator {

        public static ClosedValidator CreateClosed (MutableDataMatrixParameter param) {
            return new OfClosed (param);
        }


        private sealed class OfClosed : ClosedValidator {
            private readonly MutableDataMatrixParameter p;

            public OfClosed (MutableDataMatrixParameter param) {
                this.p = param;
            }

            public ValidationResult Validate () {
                return DataMatrixValidator.Validate (p);
            }
        }
	}





	public static partial class RectangleValidator {

        public static ClosedValidator CreateClosed (MutableRectangleParameter param) {
            return new OfClosed (param);
        }


        private sealed class OfClosed : ClosedValidator {
            private readonly MutableRectangleParameter p;

            public OfClosed (MutableRectangleParameter param) {
                this.p = param;
            }

            public ValidationResult Validate () {
                return RectangleValidator.Validate (p);
            }
        }
	}





	public static partial class TriangleValidator {

        public static ClosedValidator CreateClosed (MutableTriangleParameter param) {
            return new OfClosed (param);
        }


        private sealed class OfClosed : ClosedValidator {
            private readonly MutableTriangleParameter p;

            public OfClosed (MutableTriangleParameter param) {
                this.p = param;
            }

            public ValidationResult Validate () {
                return TriangleValidator.Validate (p);
            }
        }
	}





	public static partial class CircleValidator {

        public static ClosedValidator CreateClosed (MutableCircleParameter param) {
            return new OfClosed (param);
        }


        private sealed class OfClosed : ClosedValidator {
            private readonly MutableCircleParameter p;

            public OfClosed (MutableCircleParameter param) {
                this.p = param;
            }

            public ValidationResult Validate () {
                return CircleValidator.Validate (p);
            }
        }
	}





	public static partial class LineValidator {

        public static ClosedValidator CreateClosed (MutableLineParameter param) {
            return new OfClosed (param);
        }


        private sealed class OfClosed : ClosedValidator {
            private readonly MutableLineParameter p;

            public OfClosed (MutableLineParameter param) {
                this.p = param;
            }

            public ValidationResult Validate () {
                return LineValidator.Validate (p);
            }
        }
	}





	public static partial class BypassValidator {

        public static ClosedValidator CreateClosed (MutableBypassParameter param) {
            return new OfClosed (param);
        }


        private sealed class OfClosed : ClosedValidator {
            private readonly MutableBypassParameter p;

            public OfClosed (MutableBypassParameter param) {
                this.p = param;
            }

            public ValidationResult Validate () {
                return BypassValidator.Validate (p);
            }
        }
	}





	public static partial class EllipseValidator {

        public static ClosedValidator CreateClosed (MutableEllipseParameter param) {
            return new OfClosed (param);
        }


        private sealed class OfClosed : ClosedValidator {
            private readonly MutableEllipseParameter p;

            public OfClosed (MutableEllipseParameter param) {
                this.p = param;
            }

            public ValidationResult Validate () {
                return EllipseValidator.Validate (p);
            }
        }
	}




}