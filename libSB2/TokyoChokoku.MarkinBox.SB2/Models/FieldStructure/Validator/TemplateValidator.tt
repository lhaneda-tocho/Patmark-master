<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ output extension=".designer.cs" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="TokyoChokoku.MarkinBox.Sketchbook.TemplateMeta" #>
<#@ include file="$(SolutionDir)/Global.ttinclude"#>
<#  #>
// 
// This code is generated by template.
// Not allowed to modify this code because your changes are deleted when in regeration.
// 

namespace TokyoChokoku.MarkinBox.Sketchbook.Validators {
    using System;
    using TokyoChokoku.MarkinBox.Sketchbook.Parameters;

<#
foreach( var field in MetaFields.Definitions) {
    var param     = field.Parameter;
    var currentClass = field.Name + "Validator";
#>

	public static partial class <#= currentClass #> {

        public static ClosedValidator CreateClosed (Mutable<#= param.Name #> param) {
            return new OfClosed (param);
        }


        private sealed class OfClosed : ClosedValidator {
            private readonly Mutable<#= param.Name #> p;

            public OfClosed (Mutable<#= param.Name #> param) {
                this.p = param;
            }

            public ValidationResult Validate () {
                return <#= currentClass #>.Validate (p);
            }
        }
	}




<#
}
#>
}