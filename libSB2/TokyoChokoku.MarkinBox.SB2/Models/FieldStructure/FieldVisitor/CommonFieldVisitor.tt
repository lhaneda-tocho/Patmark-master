﻿<#@ template language="C#" #>
<#@ output extension=".designer.cs" #>
<#@ assembly name="System.Core" #>
<#@ include file="$(SolutionDir)/Global.ttinclude"#>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="TokyoChokoku.MarkinBox.Sketchbook.TemplateMeta" #>
<#  #>
// 
// This code is generated by T4Template
// Not allowed to modify this code because your changes are deleted when in regeration.
// 


namespace TokyoChokoku.MarkinBox.Sketchbook.Fields {

    using TokyoChokoku.MarkinBox.Sketchbook.Parameters;
    using System.Collections.Immutable;
    using System.Collections.Generic;


    public abstract class CommonFieldVisitor <Return, Argument>
    : IFieldVisitor<Return, Argument>, IMutableFieldVisitor<Return, Argument> {

<#
foreach ( var fieldEntity in MetaFields.Definitions) {
    var fieldName  = fieldEntity.Name;
#>
        public abstract Return Visit(<#= fieldName #>.Constant target, Argument arg);
        public          Return Visit(<#= fieldName #>.Mutable  target, Argument arg)
        {
            return Visit (target.ToConstant (), arg);
        }


<#
}
#>
    }
}
